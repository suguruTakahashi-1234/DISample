//
//  Created by {{ argument.userName }} on {{ argument.date }}
//  Copyright {{ argument.userName }}. All rights reserved.
//

import DomainLayer
import SwiftUI

// MARK: - View

@MainActor
public struct {{ argument.screenName }}View<Dependency: {{ argument.diContainerName }}DIContainerDependency>: View {
    private let dependency: Dependency
    @State private var presenter: {{ argument.screenName }}Presenter<Dependency>

    public init(dependency: Dependency) {
        self.dependency = dependency
        presenter = {{ argument.screenName }}Presenter(dependency: dependency)
    }

    public var body: some View {
        VStack {
            Text(String(localized: "{{ argument.screenName }}View", bundle: .module))
        }
        .navigationTitle(String(localized: "{{ argument.screenName }}View", bundle: .module))
        .task {
            await presenter.onAppear()
        }
        .onDisappear {
            presenter.onDisappear()
        }
    }
}

// MARK: - Preview

import PreviewSnapshots

struct {{ argument.screenName }}View_Previews: PreviewProvider, SnapshotTestable {
    static var snapshots: PreviewSnapshots<{{ argument.diContainerName }}DIContainerDependencyMock> {
        .init(
            configurations: [
                UITestPreviewType.standard.configuration,
            ],
            configure: { dependency in
                {{ argument.screenName }}View(dependency: dependency)
                    .navigationStacked()
            }
        )
    }
}
