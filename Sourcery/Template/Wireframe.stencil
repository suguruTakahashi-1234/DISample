import DomainLayer
import Foundation

public protocol {{ argument.screenName }}Wireframe {}

// TODO: Delete after {{ argument.screenName }}Wireframe to {{ argument.routerName }}Router
extension {{ argument.routerName }}Router: {{ argument.screenName }}Wireframe {}

// TODO: Add transition source Wireframe
//    associatedtype {{ argument.screenName }}WireframeAT: {{ argument.screenName }}Wireframe
//    associatedtype {{ argument.screenName }}PresenterDependencyAT: {{ argument.screenName }}PresenterDependency
//
//    func create{{ argument.screenName }}View() -> {{ argument.screenName }}View<{{ argument.screenName }}WireframeAT, {{ argument.screenName }}PresenterDependencyAT>

// TODO: Add Router
//    @MainActor
//    public func create{{ argument.screenName }}View() -> {{ argument.screenName }}View<Self, Dependency> {
//        {{ argument.screenName }}View(router: self, dependency: dependency)
//    }
