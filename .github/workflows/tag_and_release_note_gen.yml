name: Generate Tag & Release Note

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (e.g., 1.0.2, 1.0.2-rc.1)'
        required: true
        default: '0.0.0'

env:
  RELEASE_NOTE_URL: null
  SLACK_USERNAME: DeployBot
  SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:

    # Generate Tag & Release Note
    - name: Generate Release Note URL and Validate Tag
      run: |
        # Check tag format
        TAG_FORMAT="^([0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?)$"
        if [[ ! "${{ github.event.inputs.tag }}" =~ $TAG_FORMAT ]]; then
          echo "Error: Invalid tag format!"
          exit 1
        fi
        
        # Extract branch name from github.ref
        BRANCH_NAME=$(echo ${{ github.ref }} | sed 's/refs\/heads\///')
        
        # Print the release note URL
        RELEASE_NOTE_URL="https://github.com/suguruTakahashi-1234/DISample/releases/new?tag=${{ github.event.inputs.tag }}&title=${{ github.event.inputs.tag }}&target=$BRANCH_NAME&prerelease=1"
        echo "RELEASE_NOTE_URL=$RELEASE_NOTE_URL" >> $GITHUB_ENV
        echo "Release note URL: $RELEASE_NOTE_URL"

    # Success
    - name: Slack Notification on Success
      uses: rtCamp/action-slack-notify@v2
      if: success()
      env:
        SLACK_TITLE: Generate Tag & Release Note / Success
        SLACK_COLOR: good
        SLACK_MESSAGE: "${{ env.RELEASE_NOTE_URL }}"

    # Failure
    - name: Slack Notification on Failure
      uses: rtCamp/action-slack-notify@v2
      if: failure()
      env:
        SLACK_TITLE: Generate Tag & Release Note / Failure
        SLACK_COLOR: danger
        SLACK_MESSAGE: Failure Generate Tag & Release Note
